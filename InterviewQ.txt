CoreJava
===========
1. Which is ultimate base class in java class hierarchy? List the name of methods of it?
java.lang.Object class is the base class of all Java classes.
  1.public final Class getClass()
  2.public int hashCode()
  3.public boolean equals(Object obj)
  4.public String toString()
  5.public final void notify()
  6.public final void notifyAll()
  7.public final void notifyAll()
---------------------------------------------------------------------------------------------------------------------

2. Explain narrowing and widening?

There are two types of type casting:

Widening Type Casting
Narrowing Type Casting

Widening Type Casting
Converting a lower data type into a higher one is called widening type casting. 
It is also known as implicit conversion or casting down. It is done automatically.
 It is safe because there is no chance to lose data. It takes place when:
byte -> short -> char -> int -> long -> float -> double  




--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Narrowing Type Casting
Converting a higher data type into a lower one is called narrowing type casting. 
It is also known as explicit conversion or casting up. It is done manually by the programmer. 
If we do not perform casting then the compiler reports a compile-time error.

double -> float -> long -> int -> char -> short -> byte  
Let's see an example of narrowing type casting.

In the following example, we have performed the narrowing type casting two times. 
First, we have converted the double type into long data type after that long data type is converted into int type.

-------------------------------------------------------------------------------------------------------------------------------------
3. Explain the difference among final, finally and finalize?
final
-Final is a keyword.
-Final is used to apply restrictions on class, method and variable. 
-Final class can't be inherited,
-final method can't be overridden and-
-final variable value can't be changed.
--------------------------------------------------------------------------------------------------------
finally
-Finally is a block.	
Finally is used to place important code, it will be executed whether exception is handled or not.
---------------------------------------------------------------------------------------------------------------------------------
finalize
-Finalize is a method.
Finalize is used to perform clean up processing just before object is garbage collected
--------------------------------------------------------------------------------------------------------------------------------
4. Explain the difference among checked and unchecked exception?
Checked Exception	
1)Checked exceptions occur at compile time.
2)The compiler checks a checked exception.		
3)These types of exceptions can be handled at the time of compilation.	
4)Here, the JVM needs the exception to catch and handle.
5)Examples of Checked exceptions:
File Not Found Exception
No Such Field Exception
Interrupted Exception
No Such Method Exception
Class Not Found Exception
-------------------------------------------------------------------------------------------------
Unchecked Exception
1)Unchecked exceptions occur at runtime.
2)The compiler does not check these types of exceptions.
3)These types of exceptions cannot be a catch or handle at the time of compilation,
 because they get generated by the mistakes in the program.
4)Here, the JVM does not require the exception to catch and handle.
5)Examples of Unchecked Exceptions:
No Such Element Exception
Undeclared Throwable Exception
Empty Stack Exception
Arithmetic Exception
Null Pointer Exception
Array Index Out of Bounds Exception
Security Exception
------------------------------------------------------------------------------------------------------------------

5. Explain exception chaining?
--------------------------------------------------------------------------------------------------------------------------

6. What do you know about final method?
We can declare a method as final, once you declare a method final it cannot be overridden. 
So, you cannot modify a final method from a sub class.
  The main intention of making a method final would be that the content of the method should not be changed by any outsider.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

7. Why java does not support multiple implementation inheritance?
 1.Multiple Inheritance is a feature of object oriented concept, where a class can inherit properties of more  than one parent class. 
   2.The problem occurs when there exist methods with same signature in both the super classes and subclass. 
   3.On calling the method, the compiler cannot determine which class method to be called and even on calling    which class method gets the priority.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

8. Explain marker interface? List the name of some marker interfaces?
	Explain the significance of marker interface?

1.An interface that does not contain methods, fields, and constants is known as marker interface. 
     In other words, an empty interface is known as marker interface or tag interface.
   2.Serializable and Cloneable interfaces are the example of marker interface. In short, it indicates a signal      or command to the JVM.
   3.The declaration of marker interface is the same as interface in Java but the interface must be empty.
   
   *significance of marker interface
   Marker interface is used as a tag that inform the Java compiler by a message so that it can add some special    behavior to the class implementing it. Java marker interface are useful if we have information about the        class and that information never changes, in such cases, we use marker interface represent to represent the     same. Implementing an empty interface tells the compiler to do some operations.
   It is used to logically divide the code and a good way to categorize code. It is more useful for developing     API and in frameworks like Spring.




-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
9. Explain the difference among Array and ArrayList?
-Array
1)Array is static in size.
2)Array can be multi-dimensional.
3)An array can store both objects and primitives type.
4)Array provides a length variable which denotes the length of an array.





-ArrayList
1)ArrayList is dynamic in size.
2)ArrayList is always single-dimensional.
3)We cannot store primitive type in ArrayList. It automatically converts primitive type to object.
4)ArrayList provides the size() method to determine the size of ArrayList.



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

10. Explain the difference among Hash Table and Hash Map?
HashMap
-HashMap introduced in 1.2 version
-It is not thread safe and unsynchonized
-it is fast
-it work with single thread
-allows one null key


Hash Table
-There since java was  introduced
-it is thread safe and synchronized
-it is slow
-it works with multiple thread
-does not allow null key
----------------------------------------------------------------------------------------------------------------------------------
11. Explain the difference among HashSet and Hash Map?
HashMap
-Java HashMap is a hash table based implementation of Map interface.
-HashMap implements Map, Cloneable, and Serializable interfaces.
-In HashMap we store a key-value pair. It maintains the mapping of key and value.
-It does not allow duplicate keys, but duplicate values are allowed.
-HashMap uses the put() method to add the elements in the HashMap.
-HashMap internally uses hashing to store objects.

HashSet 
-HashSet is a Set. It creates a collection that uses a hash table for storage.
-HashSet implements Set, Cloneable, Serializable, Iterable and Collection interfaces.
-In HashSet, we store objects.
-It does not allow duplicate values.
-HashSet uses the add() method to add elements in the HashSet.
-HashSet internally uses a HashMap object to store objects.



	
================================================================
AdvJava


1. What do you mean by Dependency Injection? In how many ways can Dependency Injection be done?









2. What is Spring IOC Container? List some of the benefits of IoC.
3. Whatâ€™s the difference between @Component, @Controller, @Repository & @Service annotations in Spring?
4. What is the use of JDBC DriverManager class?

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

5. What is the difference between execute, executeQuery, executeUpdate?
6. How does Cookies work in Servlets?
7. What are the advantages of Hibernate over JDBC?
--------------------------------------------------------------------------------------------------------------------------------------------------------
8. What are the differences between a primary key and a foreign key?
Primary Key	
i)The primary key column value can never be NULL
ii)A table can have only one primary key.	
iii)The primary key is a unique attribute; therefore, it cannot stores duplicate values in relation.
iv)The primary key constraint can be defined on the temporary tables.
V)It cannot create a parent-child relationship in a table.
vi)It is used to identify each record into the database table uniquely.	

foreign key
i)The foreign key column can accept a NULL value.
ii)A table can have more than one foreign key.
iii)in foreign key We can store duplicate values in the foreign key column.
iv)A foreign key constraint cannot be defined on the temporary tables.
v)It can make a parent-child relationship in a table.
vi)It is used to links two tables together. It means the foreign key in one table refers to the primary key of another table.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
9. Explain Joins ?

Joins are used to merge two tables or retrieve data from tables. It depends on the relationship between tables.

Following are the most commonly used joins in SQL:

Inner Join: inner joins are of three type:

Theta join
Natural join
Equijoin
Outer Join: outer joins are of three type:

right outer join
Left outer join
Full outer join

-----------------------------------------------------------------------------------------------------------------------------------------------
10. Explain lifecycle of a JSP?
The JSP pages follow these phases:

Translation of JSP Page
Compilation of JSP Page
Classloading (the classloader loads class file)
Instantiation (Object of the Generated Servlet is created).
Initialization ( the container invokes jspInit() method).
Request processing ( the container invokes _jspService() method).
Destroy ( the container invokes jspDestroy() method).
-------------------------------------------------------------------------------------------------------------------------------------------------------
11. explain lifecycle of a servlet?
The web container maintains the life cycle of a servlet instance. Let's see the life cycle of the servlet:

Servlet class is loaded.
Servlet instance is created.
init method is invoked.
service method is invoked.
destroy method is invoked.
-------------------------------------------------------------------------------------------------------------------------------------------------------

12. What are different types of JDBC Drivers?

There are 4 types of JDBC drivers:
JDBC-ODBC bridge driver
Native-API driver (partially java driver)
Network Protocol driver (fully java driver)
Thin driver (fully java driver)
--------------------------------------------------------------------------------------------------------------------------------------------------------------
13. What is the difference between GET and POST method?
GET

-Get request can be bookmarked.
-Get request is not secured because data is exposed in URL bar.
-GET requests remain in the browser history
-in the get request Data is visible to everyone in the URL




POST
-Post request cannot be bookmarked.
-Post request is secured because data is not exposed in URL bar.
-POST requests do not remain in the browser history
-Data is not displayed in the URL
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14. explain what we mean by an ACID transaction

ACID properties are some basic rules, which has to be satisfied by every transaction to preserve the integrity. 
These properties and rules are:

ATOMICITY: Atomicity is more generally known as ?all or nothing rule.' Which implies all are considered as one unit, 
and they either run to completion or not executed at all.

CONSISTENCY: This property refers to the uniformity of the data. Consistency implies that the database is consistent 
before and after the transaction.

ISOLATION: This property states that the number of the transaction can be executed concurrently without leading to the 
inconsistency of the database state.

DURABILITY: This property ensures that once the transaction is committed it will be stored in the non-volatile 
memory and system crash can also not affect it anymore.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

15. What are relationships and mention different types of relationships in the DBMS

A relational database collects different types of data sets that use tables, records, and columns. 
It is used to create a well-defined relationship between database tables so that relational databases can be easily stored. 
For example of relational databases such as Microsoft SQL Server, Oracle Database, MYSQL, etc.

One to One relationship
One to many or many to one relationship
Many to many relationships
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

16. What are the different types of keys in the database?

There are following types of keys:

Primary key: The Primary key is an attribute in a table that can uniquely identify each record in a table. 
It is compulsory for every table.

Candidate key: The Candidate key is an attribute or set of an attribute which can uniquely identify a tuple. 
The Primary key can be selected from these attributes.

Super key: The Super key is a set of attributes which can uniquely identify a tuple. 
Super key is a superset of the candidate key.

Foreign key: The Foreign key is a primary key from one table, which has a relationship with another table. 
It acts as a cross-reference between tables.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------